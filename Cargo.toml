[package]
name = "kratos-rs"
version = "0.0.1"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[workspace]
members = ["kratos_core_rs", "configs", "data", "service", "biz", "protos", "api"]


[build-dependencies]
tonic-build = "0.9.2"
prost-build = "0.11.8"


[dependencies]

kratos_core_rs = {path = "./kratos_core_rs"}
configs = {path = "./configs"}
data = {path = "./data"}
service = {path = "./service"}
biz = {path = "./biz"}
protos = {path = "./protos"}
api = {path = "./api"}


tokio = { version = "1.25.0", features = ["full"] }
serde = { version = "1.0.127", features = ["derive"] }
serde_json = "1.0.66"
serde_yaml = "0.9.14"
# async-trait = "0.1.56"

axum = { version = "0.6.4", features = ["headers", "macros"]}
hyper = "0.14.20"

# 日志
tracing = "0.1"
tracing-subscriber = { version="0.3", features = ["env-filter"] }

tower-http = { version = "0.4.0", features = ["fs", "trace"] }
tower-service = "0.3.2"
tower-layer = "0.3.2"


# grpc 生成
prost = "0.11"
prost-types = "0.11"

# GRPC Toic GRPC服务
tonic = "0.9.2"
http-body = "0.4.5"
http = "0.2.9"
tower = "0.4.13"
futures = "0.3.28"
tonic-reflection = "0.9.2"
sqlx = { version = "0.6", features = [ "runtime-tokio-rustls", "postgres", "macros", "uuid", "chrono"] }
chrono = {version = "0.4.24", features = ["serde"]}


# 数据库
# sqlx = { version = "0.5", features = [ "runtime-tokio-rustls", "postgres", "mysql" ] }
# redis 数据库
# redis = { version = "0.21", features = ["tokio-comp"] }
# deadpool-redis = { version = "0.10.2", features = ["serde"] }


# opt-level
# 0：不进行优化，并且激活#[cfg(debug_assertions)]属性。
# 1：允许基本优化。
# 2：允许常用的优化。
# 3：允许所有的优化。
# "s"：允许常用的优化，外加一些能缩小体积的优化。
# "z"：类似"s"，但更偏重于体积的优化(可能会降低性能)。
[profile.dev]
opt-level = 0
lto = "thin"
codegen-units = 1024

[profile.release]
opt-level = 3
codegen-units = 1
